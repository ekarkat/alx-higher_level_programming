
Impor method to test
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Simple Tests:
    >>> bg = BaseGeometry()
    >>> bg.integer_validator("num", 999)

    >>> bg = BaseGeometry()
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("num", 0)
    Traceback (most recent call last):
    ValueError: num must be greater than 0

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("num", -1)
    Traceback (most recent call last):
    ValueError: num must be greater than 0

Test wrong input

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("num", None)
    Traceback (most recent call last):
    TypeError: num must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("num", "hhh")
    Traceback (most recent call last):
    TypeError: num must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("num", [1, 2, 3])
    Traceback (most recent call last):
    TypeError: num must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("age", True)
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("num")
    Traceback (most recent call last):
    TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
